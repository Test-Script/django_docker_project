version: '3.9'

services:
  app:
    image: application:latest
    container_name: test_app
    ports:
      - "8181:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      app_net:
        ipv4_address: 172.20.0.4

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      app_net:
        ipv4_address: 172.20.0.5
  db:
    image: mysql:latest
    container_name: django_db
    ports:
      - "3304:3304"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: test_db
      MYSQL_USER: django_user
      MYSQL_PASSWORD: django_pass
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -padmin | grep 'mysqld is alive'"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app_net:
        ipv4_address: 172.20.0.3

# ----------------------------------------------
# Persistent volumes (survive container restarts)
# ----------------------------------------------

volumes:
  db_data:        # Database persistence
  static_data:    # Shared static/media files

# ----------------------------------------------
# Custom network with IP range for static IPs
# ----------------------------------------------

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
